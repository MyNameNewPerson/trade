// –í—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
// –í—ã–ø–æ–ª–Ω–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –æ–±—Ö–æ–¥–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏

console.log('üöÄ –î–µ–º–æ –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ CryptoFlow');

// –°–æ–∑–¥–∞—Ç—å mock –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage
const mockAdminUser = {
  id: 'demo-admin-123',
  email: 'admin@cryptoflow.test', 
  firstName: 'Demo',
  lastName: 'Administrator',
  role: 'admin',
  isActive: true,
  profileImageUrl: null
};

// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ localStorage
localStorage.setItem('auth_token', 'demo-admin-token-123');
localStorage.setItem('user_data', JSON.stringify(mockAdminUser));

console.log('‚úÖ Mock –∞–¥–º–∏–Ω —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞!');
console.log('üìß Email: admin@cryptoflow.test');
console.log('üë§ Role: admin');
console.log('');
console.log('üåê –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –ø–æ —Å—Å—ã–ª–∫–∞–º:');
console.log('üìä Dashboard: /admin');
console.log('üë• Users: /admin/users');
console.log('üì± Telegram: /admin/telegram');
console.log('üíº Wallets: /admin/wallets');
console.log('ü™ô Currencies: /admin/currencies');
console.log('üîÑ Exchange Methods: /admin/exchange-methods');
console.log('üìú Logs: /admin/logs');
console.log('‚öôÔ∏è Settings: /admin/settings');
console.log('');
console.log('‚ö†Ô∏è  –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —ç—Ç–æ –¥–µ–º–æ —Ä–µ–∂–∏–º, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é');